// Generated by CoffeeScript 1.6.3
(function() {
  var askWhichFriend, buidConversation, buidpage, conversation, setAndBindPageSizes, transition;

  conversation = [];

  $(document).ready(function() {
    return buidpage();
  });

  buidpage = function() {
    transition();
    return setAndBindPageSizes();
  };

  transition = function() {
    return $("#firstButton").delay(2000).fadeTo(200, 0).delay(200).fadeTo(0, 0, askWhichFriend);
  };

  /*	$(".welcome").removeClass("initial")
  				 .addClass("move")
  				 .delay(1800)
  				 .addClass("second")
  */


  askWhichFriend = function() {
    var buildFriends;
    $("#firstButton").text("Please select a conversation...").delay(1000).fadeTo(300, 1).delay(2000);
    $(".ninja").removeClass("hidden");
    buildFriends = function(Friends) {
      var build, friend, _i, _len, _results;
      build = function(thread) {
        var $friend, $mostRecent, $name, getUserInfo, recipient, _i, _len, _ref;
        console.log(thread);
        $friend = $("<div/>", {
          "class": "friend",
          id: "" + thread.thread_id
        });
        $mostRecent = $("<div/>", {
          "class": "FmostRECENT",
          text: "" + thread.snippet
        });
        $name = $("<div/>", {
          "class": "friendNAME",
          text: ""
        });
        getUserInfo = function(friend) {
          var $pic;
          if ($name.text() === "") {
            $name.text("" + friend.name);
          } else {
            $name.text($name.text() + (" & " + friend.name));
          }
          $pic = $("<img/>", {
            "class": "friendPIC",
            src: "" + friend.pic_square
          });
          return $friend.append($pic).append($name).append($mostRecent);
        };
        _ref = thread.recipients;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          recipient = _ref[_i];
          if (!(recipient !== thread.viewer_id)) {
            continue;
          }
          console.log("recipient: " + recipient);
          console.log("thread.viewer_id: " + thread.viewer_id);
          $.get("/userInfo", {
            uid: recipient
          }, getUserInfo);
        }
        $friend.click(function() {
          return null;
        });
        return $friend;
      };
      _results = [];
      for (_i = 0, _len = Friends.length; _i < _len; _i++) {
        friend = Friends[_i];
        _results.push($(".FRIENDS").append(build(friend)));
      }
      return _results;
    };
    return $.get("/allThreads", buildFriends);
  };

  buidConversation = function() {
    var $convo, build, message, _i, _len;
    $convo = $(".CONVO");
    for (_i = 0, _len = conversation.length; _i < _len; _i++) {
      message = conversation[_i];
      $convo.append(build(message));
    }
    return build = function(message) {
      var $m;
      return $m = $("<div/>", {
        id: "" + message.id,
        "class": "" + message.direction,
        text: "" + message.text
      });
    };
  };

  setAndBindPageSizes = function() {
    var setSizes;
    setSizes = function() {
      var h, w;
      w = $(window).width();
      h = $(window).height();
      return $(".ninja").height(8 * h / 10);
    };
    $(window).bind('resize', function() {
      return setSizes();
    });
    return setSizes();
  };

}).call(this);
